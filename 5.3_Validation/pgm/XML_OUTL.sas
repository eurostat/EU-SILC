/**
 * Revision History
 * - MAR 31st 2022
 */

/**
 * *************************
 * *** OUTLIER DETECTION ***
 * *************************
 */

%MACRO getOUTLCFG;

%LOCAL INDIR INFNAME MAPDIR MAPNAME;

%LET INDIR=%SYSFUNC(PATHNAME(XMLCFG))&_dirsp_%quote(OUTL);
%LET INFNAME=OUTL-R-&YYYY..xml;

LIBNAME IN_XML XMLV2 "&INDIR&_dirsp_%quote(&INFNAME)" XMLMAP="%SYSFUNC(PATHNAME(MAPDIR))&_dirsp_%quote(OUTL.map)";
DATA OUTL_CFG;
SET  IN_XML.OUTL;
RUN;

%MEND getOUTLCFG;



%MACRO check_OUTL;

%LOCAL I N_VAR VARIABLE;
%LOCAL FORMULA LB_LOC LB_K LB_SCAL UB_LOC UB_K UB_SCAL;

DATA OUTL_CFG;
SET  OUTL_CFG;
  CALL SYMPUTX('N_VAR',_N_);
RUN;

DATA OUTL_REP;
  LENGTH YYYY ID 8;
  LENGTH VARIABLE $12;
  LENGTH VALUE 8;
  LENGTH LB UB 8;
  STOP;
RUN;

%DO I = 1 %TO &N_VAR;

	DATA _NULL_;
	SET  OUTL_CFG (FIRSTOBS=&I OBS=&I);
	  CALL SYMPUTX('VARIABLE',ID);
	  CALL SYMPUTX('FORMULA',FORMULA);
	  CALL SYMPUTX('LB_LOC',LB_LOC);
	  CALL SYMPUTX('LB_K',LB_K);
	  CALL SYMPUTX('LB_SCAL',LB_SCAL);
	  CALL SYMPUTX('UB_LOC',UB_LOC);
	  CALL SYMPUTX('UB_K',UB_K);
	  CALL SYMPUTX('UB_SCAL',UB_SCAL);
	RUN;
	
	PROC CONTENTS DATA=RAW.&ss&cc&YY.%SUBSTR(&VARIABLE,1,1) OUT=MEMBERS NOPRINT;
	RUN;
	
	%LET FOUND=0;
	PROC SQL NOPRINT;
	  SELECT COUNT(*) INTO :FOUND
	  FROM   MEMBERS
 	  WHERE  UPCASE(NAME) = UPCASE("&VARIABLE")
	  ;
	QUIT;

	%IF &FOUND GT 0 %THEN %DO;
		%PUT OUTLIER DETECTION: &VARIABLE
		;
		PROC MEANS DATA=RAW.&ss&cc&YY.%SUBSTR(&VARIABLE,1,1) 
		(WHERE=(&VARIABLE not in (0 .) AND %SUBSTR(&VARIABLE,1,1)B010 = &YYYY)) 
		VARDEF=DF NOPRINT
		;
		  VAR &VARIABLE;
		  OUTPUT OUT=MNS 
			MEAN=MEAN 
			MEDIAN=MEDIAN 
			STD=STD
			P5=P5 P10=P10 P25=P25
			P75=P75 P90=P90 P95=P95
			Q1=Q1 Q3=Q3
		  ;
		RUN;
		DATA MNS;
		SET;
			Q1 = P25;
			Q3 = P75;
			IQR = P75 - P25;
			%IF &FORMULA EQ LOG %THEN %DO;
			LOG_IQR = LOG(P75) - LOG(P25);
			LOG_STD = LOG(STD);
			LB = EXP( LOG(&LB_LOC) - &LB_K * LOG_&LB_SCAL );
			%END;
			%ELSE %DO;
			LB = &LB_LOC - &LB_K * &LB_SCAL;  
			%END;
			%IF &FORMULA EQ LOG %THEN %DO;
			UB = EXP( LOG(&UB_LOC) + &UB_K * LOG_&UB_SCAL );
			%END;
			%ELSE %DO;
			UB = &UB_LOC + &UB_K * &UB_SCAL;  
			%END;
			IF _N_ = 1 THEN DO;
				PUT "*I* FORM  &VARIABLE: " "&FORMULA";
				PUT "*I* LB    &VARIABLE: " LB;
				PUT "*I* LLOC  &VARIABLE: " &LB_LOC;
				PUT "*I* ULOC  &VARIABLE: " &UB_LOC;
				PUT "*I* UB    &VARIABLE: " UB;
				%IF &FORMULA EQ STD %THEN PUT "*I* SCAL  &VARIABLE: " &LB_SCAL;;
				%IF &FORMULA EQ STD %THEN PUT "*I* SCAL  &VARIABLE: " LOG_&LB_SCAL;;
				PUT "*I* LK    &VARIABLE: " "&LB_K";
				PUT "*I* UK    &VARIABLE: " "&UB_K";
			END;
		RUN;

		%PUT *I* EXTRACTING OUTL &VARIABLE FROM RAW.&ss&cc&YY.%SUBSTR(&VARIABLE,1,1) ...
		;
		DATA OUTL_I 
		  (KEEP=
			%SUBSTR(&VARIABLE,1,1)B010 
			%SUBSTR(&VARIABLE,1,1)B030
			VARIABLE
			VALUE
			LB
			UB
			RENAME=(%SUBSTR(&VARIABLE,1,1)B010=YYYY %SUBSTR(&VARIABLE,1,1)B030=ID))
		;
		SET  RAW.&ss&cc&YY.%SUBSTR(&VARIABLE,1,1)
		(WHERE=(&VARIABLE not in (0 .) AND %SUBSTR(&VARIABLE,1,1)B010 = &YYYY))
		;
		IF _N_ = 1 THEN SET MNS (KEEP=LB UB);
		  LENGTH VARIABLE $12;
		  VARIABLE = "&VARIABLE";
		  VALUE = &VARIABLE;
		  IF ( UB gt LB ) AND ( UB * LB ne . ) THEN DO;
		     IF (&VARIABLE > UB) OR (&VARIABLE < LB) THEN OUTPUT;
		  END;
		RUN;	

		PROC APPEND BASE=OUTL_REP DATA=OUTL_I FORCE;
		RUN;
	%END;
	%ELSE %DO;
		%PUT *W* &VARIABLE NOT FOUND
		;	
	%END;
	
%END;

DATA OUTL_REP;
SET  OUTL_REP;
  IF VALUE lt LB THEN DELTA = ABS(VALUE-LB);
  ELSE IF VALUE gt UB THEN DELTA = ABS(VALUE - UB);
RUN;

%MEND check_OUTL;


%MACRO reduce_OUTL(TBL=OUTL_REP,MAXREC=7);

PROC SORT DATA=&TBL OUT=&TBL._2REP;
  BY VARIABLE DESCENDING YYYY DESCENDING DELTA;
DATA _LAST_ (DROP=C);
SET;
  BY VARIABLE;
  RETAIN C 1;
  YR = YYYY;
  LGYR = LAG(YYYY);
  IF FIRST.VARIABLE THEN DO; 
	 C = 1;
	 LGYR = 0;
  END;
  ELSE DO;
	  IF YR = LGYR AND LGYR ^= . THEN DO;
		 C + 1;
	  END;
	  ELSE C = 1;
  END;	 
  IF C <= &MAXREC; 
RUN;

%MEND reduce_OUTL;

%MACRO rep_OUTL;

%LOCAL N_OUTL;

%reduce_OUTL;

OPTIONS NODATE NONUMBER;
ODS &OUTPUTFORMAT FILE = "&OUT&_dirsp_%quote(&CC&YY.-Outliers.&EXTENSION)" &OUTOPTION ;

TITLE1 'OUTLIER CHECKS';
TITLE2 "&CC - &YYYY / TRANSMISSION=&SS";

%LET N_OUTL=0;
DATA OUTL_REP_2REP;
SET  OUTL_REP_2REP;
  CALL SYMPUTX('N_OUTL',_N_);
RUN;

%IF &N_OUTL GT 0 %THEN %DO;

	PROC TABULATE DATA=OUTL_REP_2REP ORDER=DATA;
	  CLASS YYYY ID VARIABLE;
	  VAR VALUE LB UB;
	  TABLE VARIABLE*YYYY*ID, VALUE LB UB;
	  KEYLABEL SUM = ' ';
	RUN;
%END;

DATA HEADER (KEEP=MSG);
  LENGTH MSG T $125;
  LABEL MSG = 'VALIDATION STATUS';
  T = PUT(DATETIME(),DATETIME20.);
  MSG = "OUTLIER VALIDATION ACCOMPLISHED ON " || COMPRESS(T);
RUN;

PROC REPORT DATA=HEADER;
  COLUMN MSG;
RUN;

TITLE1;
TITLE2;

ODS &OUTPUTFORMAT CLOSE;

%IF &CSV=YES %THEN %DO;
	PROC EXPORT DATA=OUTL_REP
	FILE="&OUT&_dirsp_%quote(&CC&YY.-Outliers.csv)" REPLACE;
	RUN;
%END;
%MEND rep_OUTL;

